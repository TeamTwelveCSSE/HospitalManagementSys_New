using HospitalManagementSystem.App_Code;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace HospitalManagementSystem
{
    public partial class Employee : System.Web.UI.Page
    {
        EmployeeObj emp = new EmployeeObj();
        DataManager dtMgr = new DataManager();
        DataTable dtbl = new DataTable();

        protected void Page_Load(object sender, EventArgs e)
        {
            txtDOB.Attributes["max"] = DateTime.Now.AddYears(-18).ToString("yyyy-MM-dd");

            dtbl = dtMgr.GetEmployeeInfo();
            if (dtbl == null)
            {
                divFailed.Visible = true;
                lblFailed.Visible = true;
                lblFailed.Text = "No Records Found";
            }
            else
            {
                GridEmp.DataSource = dtbl;
                GridEmp.DataBind();
            }

            divFailed.Visible = false;
            lblFailed.Visible = false;
        }

        protected void btnSubmit_Click(object sender, EventArgs e)
        {
            emp.EmpType = lstEmpType.SelectedValue;
            emp.FirstName = txtFirstName.Text.Trim();
            emp.LastName = txtLastName.Text.Trim();
            emp.Address = txtAddress.Text;
            emp.NIC = txtNIC.Text.Trim();
            emp.DOB = DateTime.Parse(txtDOB.Text).Date;
            emp.Gender = radioGender.SelectedValue;
            emp.Email = txtMail.Text.Trim();
            emp.Contact = txtContact.Text.Trim();
            emp.Basic_Salary = float.Parse(txtSalary.Text.Trim());
            emp.SLMC_No = txtSLMCNo.Text.Trim();

            if (dtMgr.InsertEmpDetails(emp))
            {
                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "string", "<script>" + "if(confirm('Successfully submited') == true){" + "window.location.href = 'Employee.aspx'" + "}" + "else{" + "alert('not confirmed!')" + "}" + "</script>");
            }

            else
            {
                Page.ClientScript.RegisterStartupScript(this.GetType(), "Scripts", "<script>alert('Data insertion failed');</script>");
            }
        }

        protected void btnUpdate_Click(object sender, EventArgs e)
        {
            emp.EmpId = int.Parse(txtEmpIDRegister.Text.Trim());
            emp.EmpType = lstEmpType.SelectedValue;
            emp.FirstName = txtFirstName.Text.Trim();
            emp.LastName = txtLastName.Text.Trim();
            emp.Address = txtAddress.Text;
            emp.NIC = txtNIC.Text.Trim();
            emp.DOB = DateTime.Parse(txtDOB.Text).Date;
            emp.Gender = radioGender.SelectedValue;
            //if (radioBtnMale.Checked)
            //    emp.Gender = radioBtnMale.Text;
            //else
            //    emp.Gender = radioBtnFemale.Text;
            emp.Email = txtMail.Text.Trim();
            emp.Contact = txtContact.Text.Trim();
            emp.Basic_Salary = float.Parse(txtSalary.Text.Trim());
            emp.SLMC_No = txtSLMCNo.Text.Trim();

            if (dtMgr.UpdateEmpDetails(emp))
            {
                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "string", "<script>" + "if(confirm('Successfully updated') == true){" + "window.location.href = 'Employee.aspx'" + "}" + "else{" + "alert('not confirmed!')" + "}" + "</script>");
            }

            else
            {
                Page.ClientScript.RegisterStartupScript(this.GetType(), "Scripts", "<script>alert('Data update failed');</script>");
            }
        }

        protected void btnDelete_Click(object sender, GridViewDeleteEventArgs e)
        {
            if (dtMgr.DeleteEmpDetails(txtEmpIDRegister.Text.Trim()))
            {
                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "string", "<script>" + "if(confirm('Successfully deleted') == true){" + "window.location.href = 'Employee.aspx'" + "}" + "else{" + "alert('not confirmed!')" + "}" + "</script>");
            }

            else
            {
                Page.ClientScript.RegisterStartupScript(this.GetType(), "Scripts", "<script>alert('Data deletion failed');</script>");
            }
        }

        protected void btnCancel_Click(object sender, EventArgs e)
        {

        }
        
        protected void GridEmp_SelectedIndexChanged(object sender, EventArgs e)
        {
            lstEmpType.SelectedValue = GridEmp.SelectedRow.Cells[2].Text.ToString();
            txtEmpIDRegister.Text = GridEmp.SelectedRow.Cells[1].Text.ToString();
            txtFirstName.Text = GridEmp.SelectedRow.Cells[3].Text.ToString();
            txtLastName.Text = GridEmp.SelectedRow.Cells[4].Text.ToString();
            txtAddress.Text = GridEmp.SelectedRow.Cells[5].Text.ToString();
            txtNIC.Text = GridEmp.SelectedRow.Cells[6].Text.ToString();
            txtDOB.Text = DateTime.Parse(GridEmp.SelectedRow.Cells[7].Text.ToString()).Date.ToString("yyyy-MM-dd");
            radioGender.SelectedValue = GridEmp.SelectedRow.Cells[8].Text.ToString();
            txtMail.Text = GridEmp.SelectedRow.Cells[9].Text.ToString();
            txtContact.Text = GridEmp.SelectedRow.Cells[10].Text.ToString();
            txtSalary.Text = GridEmp.SelectedRow.Cells[11].Text.ToString();
            if (!String.IsNullOrEmpty(GridEmp.SelectedRow.Cells[12].Text.ToString()))
            {
                txtSLMCNo.Text = GridEmp.SelectedRow.Cells[12].Text.ToString();
            }

            btnUpdate.Enabled = true;
            btnUpdate.BackColor = System.Drawing.ColorTranslator.FromHtml("#96C03A");

            btnDelete.Enabled = true;
            btnDelete.BackColor = System.Drawing.ColorTranslator.FromHtml("#96C03A");
        }

        protected void GridViewTest_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {

        }

        protected void GridViewTest_RowEditing(object sender, GridViewEditEventArgs e)
        {

        }

        protected void GridEmp_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                e.Row.Attributes["onclick"] = Page.ClientScript.GetPostBackClientHyperlink(GridEmp, "Select$" + e.Row.RowIndex);
                e.Row.ToolTip = "Click to select this row.";
            }
        }

        protected void brnSearch_Click(object sender, EventArgs e)
        {
            string query = null;
            string selectedBy = lstSearch.SelectedValue.ToString();
            try
            {

                if (selectedBy == "Employee Id")
                {
                    query = @"SELECT * FROM employee WHERE Employee_Id=@value";
                }
                else if (selectedBy == "Employee Type")
                {
                    query = @"SELECT * FROM employee WHERE Employee_Type=@value";
                }
                else if (selectedBy == "First Name")
                {
                    query = @"SELECT * FROM employee WHERE First_Name=@value";
                }
                else if (selectedBy == "Last Name")
                {
                    query = @"SELECT * FROM employee WHERE Last_Name=@value";
                }
                else if (selectedBy == "NIC")
                {
                    query = @"SELECT * FROM employee WHERE NIC=@value";
                }
                else if (selectedBy == "E Mail")
                {
                    query = @"SELECT * FROM employee WHERE E_Mail=@value";
                }

                dtbl = dtMgr.SearchDetails(query, txtSearch.Text.Trim());

                if (dtbl == null)
                {
                    divFailed.Visible = true;
                    lblFailed.Visible = true;
                    lblFailed.Text = "No Records Found";
                }
                else
                {
                    GridEmp.DataSource = dtbl;
                    GridEmp.DataBind();
                }

            }
            catch (Exception ex)
            {
                EventLogUtil.Log(string.Format("Failed to search employee from value: {0} of {1}. Exception : {2}", selectedBy, txtSearch.Text.Trim(), ex.Message));
            }

        }

    }
        protected void btnCancel_Click(object sender, EventArgs e)
        {

        }

        [WebMethod]
        public static void GetGender_DOB(string nic)
        {
            DataManager dtMgr = new DataManager();


        }
    }
}